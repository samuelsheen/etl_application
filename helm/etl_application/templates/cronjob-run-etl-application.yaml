apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "etl_application.fullname" . }}
  labels:
    {{ include "etl_application.labels" . | nindent 4 }}
spec:
  schedule: "*/1 * * * *" # every 1 mins
  startingDeadlineSeconds: 60 # 1m
  concurrencyPolicy: Forbid # don't allow multiple at once "Allow" to allow multiple concurent
  suspend: False
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 900 # 15m before finishd job clears off pod
      template:
        metadata:
          labels: {{ include "etl_application.labels" $ | nindent 12 }} 
        spec:
          terminationGracePeriodSeconds: 600
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          containers:
          - name: {{ include "etl_application.fullname" . }}
            image: "{{ .Values.image }}:{{ .Values.global.deployment.version | default .Chart.AppVersion }}"
            imagePullPolicy: "{{ .Values.imagePullPolicy }}"
            ports:
            - name: etl_application
              containerPort: {{ .Values.servicePort }}
              protocol: TCP
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            command: ["/bin/sh","-c","/etl_application/run.sh"]
            env:
              - name: CLUSTER
                value: {{ .Values.cluster }}
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: "/etc/keys/gcpsa.json"
              - name: API_USER
                value: {{ $.Values.secret.api.user }}
              - name: API_PASS
                value: {{ $.Values.secret.api.pass }}
              - name: PROXY_SERVER
                value: {{ $.Values.proxy.http_proxy }}
              - name: PUSH_GATEWAY_HOST
                value: '{{ $.Values.config.push_gateway_host }}'
              - name: PUSH_GATEWAY_PORT
                value: '{{ $.Values.pushGatewayPort }}'
              - name: PUSH_GATEWAY_JOB_NAME
                value: '{{ .Values.config.push_gateway_job_name }}'
              - name: run_mode
                value: {{ .Values.config.run_mode }}
              - name: log_level
                value: {{ .Values.config.log_level }}
            volumeMounts:
                - name: gcp-sa-key-file
                  readOnly: true
                  mountPath: /etc/keys
          hostAliases:
            - ip: {{ $.Values.hosts.oauth.ip }}
              hostnames:
                - {{ $.Values.hosts.oauth.hostname }}
          volumes:
            - name: gcp-sa-key-file
              secret:
                secretName: {{ include "etl_application.name" $ }}-gcp-sa-key
          restartPolicy: Never
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}